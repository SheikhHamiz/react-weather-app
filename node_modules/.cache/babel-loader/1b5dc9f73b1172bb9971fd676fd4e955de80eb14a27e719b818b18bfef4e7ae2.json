{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\react-weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './components/api';\nimport Search from './components/search/search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const handleOnSearchChange = searchData => {\n    const [lat, long] = searchData.value.split(\" \");\n    const CurrentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${long}&appid=${WEATHER_API_KEY}`);\n    const CurrentForecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${long}&appid=${WEATHER_API_KEY}`);\n    Promise.all([CurrentWeatherFetch, CurrentForecastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[0].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forecastResponse\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: currentWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WWp4biUQ6yxZ26omAvrL3l/oQ6o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","CurrentWeather","WEATHER_API_KEY","WEATHER_API_URL","Search","jsxDEV","_jsxDEV","App","_s","currentWeather","setCurrentWeather","forecast","setForecast","handleOnSearchChange","searchData","lat","long","value","split","CurrentWeatherFetch","fetch","CurrentForecastFetch","Promise","all","then","response","weatherResponse","json","forecastResponse","city","label","className","children","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["E:/Project/react-weather-app/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './components/api';\nimport Search from './components/search/search';\n\n\nfunction App() {\n\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, long] = searchData.value.split(\" \");\n\n    const CurrentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${long}&appid=${WEATHER_API_KEY}`);\n    const CurrentForecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${long}&appid=${WEATHER_API_KEY}`);\n\n    Promise.all([CurrentWeatherFetch, CurrentForecastFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[0].json();\n\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forecastResponse });\n      });\n  }\n\n  return (\n    <div className=\"container\">\n      <Search onSearchChange={handleOnSearchChange} />\n      <CurrentWeather data={currentWeather} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,cAAc,MAAM,8CAA8C;AACzE,SAASC,eAAe,EAAEC,eAAe,QAAQ,kBAAkB;AACnE,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMa,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAM,CAACC,GAAG,EAAEC,IAAI,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAE/C,MAAMC,mBAAmB,GAAGC,KAAK,CAAE,GAAEjB,eAAgB,gBAAeY,GAAI,QAAOC,IAAK,UAASd,eAAgB,EAAC,CAAC;IAC/G,MAAMmB,oBAAoB,GAAGD,KAAK,CAAE,GAAEjB,eAAgB,iBAAgBY,GAAI,QAAOC,IAAK,UAASd,eAAgB,EAAC,CAAC;IAEjHoB,OAAO,CAACC,GAAG,CAAC,CAACJ,mBAAmB,EAAEE,oBAAoB,CAAC,CAAC,CACrDG,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACxB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAChD,MAAMC,gBAAgB,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAEjDjB,iBAAiB,CAAC;QAAEmB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGJ;MAAgB,CAAC,CAAC;MACjEd,WAAW,CAAC;QAAEiB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGF;MAAiB,CAAC,CAAC;IAC9D,CAAC,CAAC;EACN,CAAC;EAED,oBACEtB,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB1B,OAAA,CAACF,MAAM;MAAC6B,cAAc,EAAEpB;IAAqB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChD/B,OAAA,CAACL,cAAc;MAACqC,IAAI,EAAE7B;IAAe;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAAC7B,EAAA,CA3BQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}